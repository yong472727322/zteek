<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zteek.mapper.AccountMapper" >

    <resultMap id="BaseResultMap" type="com.zteek.entity.Account" >
        <id column="id" property="id"/>
        <result column="username" property="username" />
        <result column="email" property="email" />
        <result column="password" property="password" />
        <result column="status" property="status" />
        <result column="country" property="country" />
        <result column="countryStatus" property="countryStatus" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="imei" property="imei" />
        <result column="regist_result" property="registResult" />
    </resultMap>

    <!-- 记录手机日志 by:leo,at:2018/10/18 -->
    <insert id="recordLog">
        INSERT into phone_log(imei,message,created_time)
        VALUES (#{imei},#{message},now())
    </insert>

    <select id="getAccountByImei" resultMap="BaseResultMap">
           SELECT
            t1.id,t1.username,t1.email,t1.password,t1.country
        FROM `account` AS t1
				JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `account` where country=#{country})-(SELECT MIN(id) FROM `account` where country=#{country}))+(SELECT MIN(id) FROM `account` where country=#{country})) AS id) AS t2
        WHERE t1.id>=t2.id and t1.status=0 and country=#{country}
        ORDER BY t1.id LIMIT 1
    </select>

    <!-- 获取最新的一条日志 by:leo,at:2018/10/19 -->
    <select id="getNewLogByImei" resultType="com.zteek.entity.PhoneLog">
        select id,imei,message,created_time AS createdTime FROM phone_log WHERE imei=#{imei} order by created_time desc limit 1
    </select>

    <update id="updateImeiById">
        update account set imei=#{imei},status=1,update_time=now() where id=#{id}
    </update>

    <update id="updateResultById">
        update account set update_time=now(),regist_result=#{registResult} where id=#{id}
    </update>

    <!--获取账号信息-->
    <select id="getCountList" resultMap="BaseResultMap">
        select
        *
        from
        `account` t
        WHERE 1=1
        <if test="username != null and username != ''">
            and t.username = #{username}
        </if>
        order by t.create_time asc
    </select>

    <update id="openUS">
        update account set countryStatus=0 where country='US'
    </update>
    <update id="closeUS">
        update account set countryStatus=1 where country='US'
    </update>

    <update id="openJP">
        update account set countryStatus=0 where country='JP'
    </update>
    <update id="closeJP">
        update account set countryStatus=1 where country='JP'
    </update>

</mapper>